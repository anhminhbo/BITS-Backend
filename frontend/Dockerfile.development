# This is builder stage
FROM node:16-alpine as builder

# Set the working directory to /app inside the container
WORKDIR /app
# Copy app files
COPY package* ./

COPY . .

# Install dependencies (npm ci makes sure the exact versions in the lockfile gets installed)
RUN npm i --only=production

# Build the app
RUN npm run build

# This is runner stage
# Bundle static assets with nginx
FROM nginx:stable-alpine as runner
# Copy built assets from `builder` image
COPY --from=builder /app/build /usr/share/nginx/html

# copy .env.production as .env to the release build
COPY --from=builder /app/.env /usr/share/nginx/html/.env

# Add your nginx.conf
COPY --from=builder /app/nginx/react-proxy.conf /etc/nginx/conf.d/default.conf

# Run node runtime
RUN apk add --update nodejs
RUN apk add --update npm
RUN npm install -g runtime-env-cra@0.2.2

WORKDIR /usr/share/nginx/html

# Start nginx
CMD ["/bin/sh", "-c", "runtime-env-cra && nginx -g \"daemon off;\""]